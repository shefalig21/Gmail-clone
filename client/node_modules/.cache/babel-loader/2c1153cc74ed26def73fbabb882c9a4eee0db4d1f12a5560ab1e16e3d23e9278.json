{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shefali\\\\Downloads\\\\gmail-clone (1)\\\\client\\\\src\\\\components\\\\Email.jsx\",\n  _s = $RefreshSig$();\nimport { ListItem, Checkbox, Typography, Box, styled } from \"@mui/material\";\nimport { StarBorder, Star } from '@mui/icons-material';\nimport useApi from '../hooks/useApi';\nimport { API_URLS } from \"../services/api.urls\";\nimport { useNavigate } from \"react-router-dom\";\nimport { routes } from \"../routes/routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled(ListItem)`\n    padding: 0 0 0 10px;\n    background: #f2f6fc;\n    cursor: pointer;\n    & > div {\n        display: flex;\n        width: 100%\n    }\n    & > div > p {\n        font-size: 14px;\n    }\n`;\n_c = Wrapper;\nconst Indicator = styled(Typography)`\n    font-size: 12px !important;\n    background: #ddd;\n    color: #222;\n    border-radius: 4px;\n    margin-right: 6px;\n    padding: 0 4px;\n`;\n_c2 = Indicator;\nconst Date = styled(Typography)({\n  marginLeft: 'auto',\n  marginRight: 20,\n  fontSize: 12,\n  color: '#5F6368'\n});\n_c3 = Date;\nconst Email = ({\n  email,\n  setStarredEmail,\n  selectedEmails,\n  setSelectedEmails\n}) => {\n  _s();\n  const toggleStarredEmailService = useApi(API_URLS.toggleStarredMails);\n  const navigate = useNavigate();\n  const toggleStarredEmail = () => {\n    toggleStarredEmailService.call({\n      id: email._id,\n      value: !email.starred\n    });\n    setStarredEmail(prevState => !prevState);\n  };\n  const handleChange = () => {\n    if (selectedEmails.includes(email._id)) {\n      setSelectedEmails(prevState => prevState.filter(id => id !== email._id));\n    } else {\n      setSelectedEmails(prevState => [...prevState, email._id]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n      size: \"small\",\n      checked: selectedEmails.includes(email._id),\n      onChange: () => handleChange()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), email.starred ? /*#__PURE__*/_jsxDEV(Star, {\n      fontSize: \"small\",\n      style: {\n        marginRight: 10\n      },\n      onClick: () => toggleStarredEmail()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(StarBorder, {\n      fontSize: \"small\",\n      style: {\n        marginRight: 10\n      },\n      onClick: () => toggleStarredEmail()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      onClick: () => navigate(routes.view.path, {\n        state: {\n          email: email\n        }\n      }),\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          width: 200\n        },\n        children: [\"To:\", email.to.split('@')[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Indicator, {\n        children: \"Inbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [email.subject, \" \", email.body && '-', \" \", email.body]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Date, {\n        children: [new window.Date(email.date).getDate(), \"\\xA0\", new window.Date(email.date).toLocaleString('default', {\n          month: 'long'\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(Email, \"bQNXEvyEz6OyFckpAc3U2N98Pug=\", false, function () {\n  return [useApi, useNavigate];\n});\n_c4 = Email;\nexport default Email;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Indicator\");\n$RefreshReg$(_c3, \"Date\");\n$RefreshReg$(_c4, \"Email\");","map":{"version":3,"names":["ListItem","Checkbox","Typography","Box","styled","StarBorder","Star","useApi","API_URLS","useNavigate","routes","jsxDEV","_jsxDEV","Wrapper","_c","Indicator","_c2","Date","marginLeft","marginRight","fontSize","color","_c3","Email","email","setStarredEmail","selectedEmails","setSelectedEmails","_s","toggleStarredEmailService","toggleStarredMails","navigate","toggleStarredEmail","call","id","_id","value","starred","prevState","handleChange","includes","filter","children","size","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","style","onClick","view","path","state","width","to","split","subject","body","window","date","getDate","toLocaleString","month","_c4","$RefreshReg$"],"sources":["C:/Users/Shefali/Downloads/gmail-clone (1)/client/src/components/Email.jsx"],"sourcesContent":["\n\nimport { ListItem, Checkbox, Typography, Box, styled } from \"@mui/material\";\nimport { StarBorder, Star } from '@mui/icons-material';\nimport useApi from '../hooks/useApi';\nimport { API_URLS } from \"../services/api.urls\";\nimport { useNavigate } from \"react-router-dom\";\nimport { routes } from \"../routes/routes\";\n\nconst Wrapper = styled(ListItem)`\n    padding: 0 0 0 10px;\n    background: #f2f6fc;\n    cursor: pointer;\n    & > div {\n        display: flex;\n        width: 100%\n    }\n    & > div > p {\n        font-size: 14px;\n    }\n`;\n\nconst Indicator = styled(Typography)`\n    font-size: 12px !important;\n    background: #ddd;\n    color: #222;\n    border-radius: 4px;\n    margin-right: 6px;\n    padding: 0 4px;\n`;\n\nconst Date = styled(Typography)({\n    marginLeft: 'auto',\n    marginRight: 20,\n    fontSize: 12,\n    color: '#5F6368'\n})\n\nconst Email = ({ email, setStarredEmail, selectedEmails, setSelectedEmails }) => {\n    const toggleStarredEmailService = useApi(API_URLS.toggleStarredMails);\n    \n    const navigate = useNavigate();\n\n    const toggleStarredEmail = () => {\n        toggleStarredEmailService.call({ id: email._id, value: !email.starred });\n        setStarredEmail(prevState => !prevState);\n    }\n\n    const handleChange = () => {\n        if (selectedEmails.includes(email._id)) {\n            setSelectedEmails(prevState => prevState.filter(id => id !== email._id));\n        } else {\n            setSelectedEmails(prevState => [...prevState, email._id]);\n        }\n    }\n\n    return (\n        <Wrapper>\n            <Checkbox \n                size=\"small\" \n                checked={selectedEmails.includes(email._id)}\n                onChange={() => handleChange()} \n            />\n            { \n                email.starred ? \n                    <Star fontSize=\"small\" style={{ marginRight: 10 }} onClick={() => toggleStarredEmail()} />\n                : \n                    <StarBorder fontSize=\"small\" style={{ marginRight: 10 }} onClick={() => toggleStarredEmail()} /> \n            }\n            <Box onClick={() => navigate(routes.view.path, { state: { email: email }})}>\n                <Typography style={{ width: 200 }}>To:{email.to.split('@')[0]}</Typography>\n                <Indicator>Inbox</Indicator>\n                <Typography>{email.subject} {email.body && '-'} {email.body}</Typography>\n                <Date>\n                    {(new window.Date(email.date)).getDate()}&nbsp;\n                    {(new window.Date(email.date)).toLocaleString('default', { month: 'long' })}\n                </Date>\n            </Box>\n        </Wrapper>\n    )\n}\n\nexport default Email;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}