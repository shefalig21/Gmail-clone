{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shefali\\\\Downloads\\\\gmail-clone (1)\\\\client\\\\src\\\\components\\\\Emails.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams, useOutletContext } from 'react-router-dom';\nimport useApi from '../hooks/useApi';\nimport { API_URLS } from '../services/api.urls';\nimport { Box, List, Checkbox } from '@mui/material';\nimport Email from './Email';\nimport { DeleteOutline } from '@mui/icons-material';\nimport NoMails from './common/NoMails';\nimport { EMPTY_TABS } from '../constants/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Emails = () => {\n  _s();\n  var _getEmailsService$res2, _getEmailsService$res3;\n  const [starredEmail, setStarredEmail] = useState(false);\n  const [selectedEmails, setSelectedEmails] = useState([]);\n  const {\n    openDrawer\n  } = useOutletContext();\n  const {\n    type\n  } = useParams();\n  const getEmailsService = useApi(API_URLS.getEmailFromType);\n  const deleteEmailsService = useApi(API_URLS.deleteEmails);\n  const moveEmailsToBin = useApi(API_URLS.moveEmailsToBin);\n  useEffect(() => {\n    getEmailsService.call({}, type);\n  }, [type, starredEmail]);\n  const selectAllEmails = e => {\n    if (e.target.checked) {\n      var _getEmailsService$res;\n      const emails = getEmailsService === null || getEmailsService === void 0 ? void 0 : (_getEmailsService$res = getEmailsService.response) === null || _getEmailsService$res === void 0 ? void 0 : _getEmailsService$res.map(email => email._id);\n      setSelectedEmails(emails);\n    } else {\n      setSelectedEmails([]);\n    }\n  };\n  const deleteSelectedEmails = () => {\n    if (type === 'bin') {\n      deleteEmailsService.call(selectedEmails);\n    } else {\n      moveEmailsToBin.call(selectedEmails);\n    }\n    setStarredEmail(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    style: openDrawer ? {\n      marginLeft: 250,\n      width: '100%'\n    } : {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        padding: '20px 10px 0 10px',\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        size: \"small\",\n        onChange: e => selectAllEmails(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DeleteOutline, {\n        onClick: e => deleteSelectedEmails(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: getEmailsService === null || getEmailsService === void 0 ? void 0 : (_getEmailsService$res2 = getEmailsService.response) === null || _getEmailsService$res2 === void 0 ? void 0 : _getEmailsService$res2.map(email => /*#__PURE__*/_jsxDEV(Email, {\n        email: email,\n        setStarredEmail: setStarredEmail,\n        selectedEmails: selectedEmails,\n        setSelectedEmails: setSelectedEmails\n      }, email.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), (getEmailsService === null || getEmailsService === void 0 ? void 0 : (_getEmailsService$res3 = getEmailsService.response) === null || _getEmailsService$res3 === void 0 ? void 0 : _getEmailsService$res3.length) === 0 && /*#__PURE__*/_jsxDEV(NoMails, {\n      message: EMPTY_TABS[type]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Emails, \"0M6erCby0MyIZXoQznrgOQybIuE=\", false, function () {\n  return [useOutletContext, useParams, useApi, useApi, useApi];\n});\n_c = Emails;\nexport default Emails;\nvar _c;\n$RefreshReg$(_c, \"Emails\");","map":{"version":3,"names":["useEffect","useState","useParams","useOutletContext","useApi","API_URLS","Box","List","Checkbox","Email","DeleteOutline","NoMails","EMPTY_TABS","jsxDEV","_jsxDEV","Emails","_s","_getEmailsService$res2","_getEmailsService$res3","starredEmail","setStarredEmail","selectedEmails","setSelectedEmails","openDrawer","type","getEmailsService","getEmailFromType","deleteEmailsService","deleteEmails","moveEmailsToBin","call","selectAllEmails","e","target","checked","_getEmailsService$res","emails","response","map","email","_id","deleteSelectedEmails","prevState","style","marginLeft","width","children","padding","display","alignItems","size","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","length","message","_c","$RefreshReg$"],"sources":["C:/Users/Shefali/Downloads/gmail-clone (1)/client/src/components/Emails.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams, useOutletContext } from 'react-router-dom';\nimport useApi from '../hooks/useApi';\nimport { API_URLS } from '../services/api.urls';\nimport { Box, List, Checkbox } from '@mui/material';\nimport Email from './Email';\nimport { DeleteOutline } from '@mui/icons-material';\nimport NoMails from './common/NoMails';\nimport { EMPTY_TABS } from '../constants/constant';\n\nconst Emails = () => {\n    const [starredEmail, setStarredEmail] = useState(false);\n    const [selectedEmails, setSelectedEmails] = useState([]);\n\n    const { openDrawer } = useOutletContext();\n    const { type } = useParams();\n\n    const getEmailsService = useApi(API_URLS.getEmailFromType);\n    const deleteEmailsService = useApi(API_URLS.deleteEmails);\n    const moveEmailsToBin = useApi(API_URLS.moveEmailsToBin);\n\n    useEffect(() => {\n        getEmailsService.call({}, type);\n    }, [type, starredEmail])\n\n    const selectAllEmails = (e) => {\n        if (e.target.checked) {\n            const emails = getEmailsService?.response?.map(email => email._id);\n            setSelectedEmails(emails);\n        } else {\n            setSelectedEmails([]);\n        }\n    }\n\n    const deleteSelectedEmails = () => {\n        if (type === 'bin') {\n            deleteEmailsService.call(selectedEmails);\n        } else {\n            moveEmailsToBin.call(selectedEmails);\n        }\n        setStarredEmail(prevState => !prevState);\n    }\n\n    return (\n        <Box style={openDrawer ? { marginLeft: 250, width: '100%' } : { width: '100%' } }>\n            <Box style={{ padding: '20px 10px 0 10px', display: 'flex', alignItems: 'center' }}>\n                <Checkbox size=\"small\" onChange={(e) => selectAllEmails(e)} />\n                <DeleteOutline onClick={(e) => deleteSelectedEmails(e)} />\n            </Box>\n            <List>\n                {\n                    getEmailsService?.response?.map(email => (\n                        <Email \n                            email={email} \n                            key={email.id}\n                            setStarredEmail={setStarredEmail} \n                            selectedEmails={selectedEmails}\n                            setSelectedEmails={setSelectedEmails}\n                        />\n                    ))\n                }\n            </List> \n            {\n                getEmailsService?.response?.length === 0 &&\n                    <NoMails message={EMPTY_TABS[type]} />\n            }\n        </Box>\n    )\n}\n\nexport default Emails;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}